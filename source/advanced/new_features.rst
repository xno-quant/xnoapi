T√≠nh nƒÉng m·ªõi
=============

üÜï C√°c t√≠nh nƒÉng ƒë∆∞·ª£c b·ªï sung g·∫ßn ƒë√¢y
------------------------------------

üìä Quant Data API v2
~~~~~~~~~~~~~~~~~~~~

- **D·ªØ li·ªáu OHLCV** v·ªõi timestamp ch√≠nh x√°c ƒë·∫øn gi√¢y
- **Order book snapshot** realtime  
- **Foreign trading data** - d·ªØ li·ªáu giao d·ªãch kh·ªëi ngo·∫°i
- **Market index snapshot** - snapshot c√°c ch·ªâ s·ªë th·ªã tr∆∞·ªùng

**V√≠ d·ª• s·ª≠ d·ª•ng:**

.. code-block:: python

   from xnoapi.vn.data import (
       get_indices, get_market_index_snapshot,
       get_stock_foreign_trading, get_stock_info, 
       get_stock_top_price
   )
   
   # Snapshot VNINDEX realtime
   vnindex_data = get_market_index_snapshot("VNINDEX")
   
   # Giao d·ªãch kh·ªëi ngo·∫°i c·ªßa VIC
   foreign_data = get_stock_foreign_trading("VIC")
   
   # Order book snapshot c·ªßa HPG
   orderbook = get_stock_top_price("HPG")

üè¶ Qu·ªπ m·ªü & T√†i s·∫£n qu·ªëc t·∫ø
~~~~~~~~~~~~~~~~~~~~~~~~~~~

- **Th√¥ng tin qu·ªπ m·ªü ƒë·∫ßy ƒë·ªß** (c·ªï phi·∫øu, tr√°i phi·∫øu, c√¢n b·∫±ng)
- **Danh m·ª•c ƒë·∫ßu t∆∞ v√† ph√¢n b·ªï t√†i s·∫£n** c·ªßa qu·ªπ
- **D·ªØ li·ªáu forex, cryptocurrency, ch·ªâ s·ªë qu·ªëc t·∫ø**

**V√≠ d·ª• s·ª≠ d·ª•ng:**

.. code-block:: python

   from xnoapi.vn.data.stocks import Fund, Global
   
   # Qu·ªπ m·ªü
   fund = Fund()
   stock_funds = fund.listing(fund_type="STOCK")
   
   # Th·ªã tr∆∞·ªùng qu·ªëc t·∫ø
   global_data = Global()
   usd_vnd = global_data.fx("USDVND").quote.history("2024-01-01", "2024-12-31")
   btc_data = global_data.crypto("BTCUSD").quote.history("2024-01-01", "2024-12-31")

üéØ Take Profit/Stop Loss n√¢ng cao
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- **Fixed TP/SL** v·ªõi hold mechanism
- **Trailing Stop Loss** ƒë·ªông
- **Backtesting v·ªõi risk management** t·ª± ƒë·ªông

**V√≠ d·ª• s·ª≠ d·ª•ng:**

.. code-block:: python

   from xnoapi.metrics import TradingBacktest
   
   backtester = TradingBacktest(df_positions)
   
   # Fixed TP/SL
   df_with_tpsl = backtester.apply_tp_sl(
       df_positions,
       tp_percentage=2.0,
       sl_percentage=1.5
   )
   
   # Trailing Stop Loss
   df_with_trailing = backtester.apply_tp_sl_trailing(
       df_positions,
       tp_percentage=2.0, 
       sl_percentage=1.0
   )

üìà Metrics m·ªü r·ªông
~~~~~~~~~~~~~~~~~~

- **Risk of Ruin calculation** - t√≠nh to√°n nguy c∆° ph√° s·∫£n
- **Value at Risk (VaR)** - ƒëo l∆∞·ªùng r·ªßi ro
- **Calmar Ratio** - t·ª∑ l·ªá return/max drawdown
- **Enhanced Sortino Ratio** - Sortino ratio c·∫£i ti·∫øn

**V√≠ d·ª• s·ª≠ d·ª•ng:**

.. code-block:: python

   from xnoapi.vn.metrics import Metrics
   
   metrics = Metrics(backtest_result)
   
   # C√°c metrics m·ªõi
   calmar = metrics.calmar_ratio()
   var_95 = metrics.value_at_risk(confidence=0.95)
   risk_of_ruin = metrics.risk_of_ruin(ruin_threshold=0.2)
   
   print(f"Calmar Ratio: {calmar:.3f}")
   print(f"VaR (95%): {var_95:.3f}")
   print(f"Risk of Ruin: {risk_of_ruin:.3f}")

üè¢ Th√¥ng tin doanh nghi·ªáp chi ti·∫øt  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- **B√°o c√°o t√†i ch√≠nh theo qu√Ω/nƒÉm** - thu th·∫≠p d·ªØ li·ªáu t√†i ch√≠nh chi ti·∫øt
- **Th√¥ng tin c·ªï ƒë√¥ng, ban l√£nh ƒë·∫°o** - corporate governance data
- **Tin t·ª©c v√† s·ª± ki·ªán quan tr·ªçng** - event-driven analysis
- **T·ª∑ s·ªë t√†i ch√≠nh t·ªïng h·ª£p** - comprehensive ratio analysis

**V√≠ d·ª• s·ª≠ d·ª•ng:**

.. code-block:: python

   from xnoapi.vn.data.stocks import Company, Finance
   
   # Th√¥ng tin c√¥ng ty
   company = Company("VIC")
   shareholders = company.shareholders()
   officers = company.officers()
   events = company.events()
   news = company.news()
   
   # B√°o c√°o t√†i ch√≠nh
   finance = Finance("VIC")
   income_stmt = finance.income_statement(period='quarter')
   balance_sheet = finance.balance_sheet(period='year')
   cash_flow = finance.cash_flow(period='year')

üîÑ C·∫£i ti·∫øn hi·ªáu su·∫•t
~~~~~~~~~~~~~~~~~~~~

- **Caching mechanism** ƒë·ªÉ tƒÉng t·ªëc ƒë·ªô truy xu·∫•t
- **Batch processing** cho vi·ªác x·ª≠ l√Ω nhi·ªÅu symbol c√πng l√∫c
- **Error handling** ƒë∆∞·ª£c c·∫£i thi·ªán
- **Data validation** t·ª± ƒë·ªông

üõ†Ô∏è Developer Experience
~~~~~~~~~~~~~~~~~~~~~~~

- **Type hints** ƒë·∫ßy ƒë·ªß cho IDE support
- **Docstring** chi ti·∫øt cho t·∫•t c·∫£ functions
- **Example code** trong documentation
- **Unit tests** coverage cao h∆°n

üì± T∆∞∆°ng th√≠ch v√† t√≠ch h·ª£p
~~~~~~~~~~~~~~~~~~~~~~~~~

- **Jupyter Notebook** optimized display
- **Pandas integration** seamless
- **Matplotlib/Plotly** visualization ready
- **REST API** endpoints